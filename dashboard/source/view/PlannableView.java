package view;

import javax.swing.JFrame;

import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.data.gantt.Task;
import org.jfree.data.gantt.TaskSeries;
import org.jfree.data.gantt.TaskSeriesCollection;
import org.jfree.data.time.SimpleTimePeriod;

import control.ControlPlannable;
import control.Utils;
import entity.WorkBreakDownElement;

/**
 * This code was edited or generated using CloudGarden's Jigloo SWT/Swing GUI
 * Builder, which is free for non-commercial use. If Jigloo is being used
 * commercially (ie, by a corporation, company or business for any purpose
 * whatever) then you should purchase a license for each developer using Jigloo.
 * Please visit www.cloudgarden.com for details. Use of Jigloo implies
 * acceptance of these licensing terms. A COMMERCIAL LICENSE HAS NOT BEEN
 * PURCHASED FOR THIS MACHINE, SO JIGLOO OR THIS CODE CANNOT BE USED LEGALLY FOR
 * ANY CORPORATE OR COMMERCIAL PURPOSE.
 */
public class PlannableView extends javax.swing.JPanel {
	/*
	 * PlannableView.java
	 * 
	 * Created on 26 janvier 2006, 03:05
	 */

	private ControlPlannable plannableC;

	// Variables declaration - do not modify
	private javax.swing.JButton bResUsg;

	private javax.swing.JPanel buttonsPanel;

	private ChartPanel chartPanel;

	private javax.swing.JPanel contentPanel;

	private javax.swing.JPanel datesPanel;

	private javax.swing.JLabel jLabel1;

	private javax.swing.JLabel jLabel10;

	private javax.swing.JLabel jLabel11;

	private javax.swing.JLabel jLabel12;

	private javax.swing.JLabel jLabel13;

	private javax.swing.JLabel jLabel14;

	private javax.swing.JLabel jLabel15;

	private javax.swing.JLabel jLabel2;

	private javax.swing.JLabel jLabel3;

	private javax.swing.JLabel jLabel4;

	private javax.swing.JLabel jLabel5;

	private javax.swing.JLabel jLabel6;

	private javax.swing.JLabel jLabel7;

	private javax.swing.JLabel jLabel8;

	private javax.swing.JLabel jLabel9;

	private javax.swing.JPanel jPanel1;

	private javax.swing.JPanel jPanel10;

	private javax.swing.JPanel jPanel11;

	private javax.swing.JPanel jPanel2;

	private javax.swing.JPanel jPanel7;

	private javax.swing.JPanel jPanel8;

	private javax.swing.JPanel jPanel9;

	private javax.swing.JPanel offsetsPanel;

	private javax.swing.JPanel startOffsetPanel;

	private javax.swing.JPanel startOffsetPanel1;

	private javax.swing.JPanel startOffsetPanel2;

	private javax.swing.JPanel textsPanel;

	private javax.swing.JPanel titlePanel;

	private javax.swing.JTextField txtDurationOffset;

	private javax.swing.JTextField txtDurationOffset2;

	private javax.swing.JTextField txtGlobalOffset;

	private javax.swing.JTextField txtGlobalOffset2;

	private javax.swing.JTextField txtPrevDuration;

	private javax.swing.JTextField txtPrevEndDate;

	private javax.swing.JTextField txtPrevStartDate;

	private javax.swing.JTextField txtRealDuration;

	private javax.swing.JTextField txtRealEndDate;

	private javax.swing.JTextField txtRealStartDate;

	private javax.swing.JTextField txtStartOffset;

	private javax.swing.JTextField txtStartOffset2;

	private javax.swing.JLabel txtTitle;

	// End of variables declaration

	/** Creates new form PlannableView */
	public PlannableView(ControlPlannable p) {
		plannableC = p;
		initComponents();
		updateTextFields();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	private void initComponents() {
		jPanel1 = new javax.swing.JPanel();
		titlePanel = new javax.swing.JPanel();
		txtTitle = new javax.swing.JLabel();
		contentPanel = new javax.swing.JPanel();
		textsPanel = new javax.swing.JPanel();
		datesPanel = new javax.swing.JPanel();
		jLabel1 = new javax.swing.JLabel();
		txtPrevStartDate = new javax.swing.JTextField();
		jLabel4 = new javax.swing.JLabel();
		txtRealStartDate = new javax.swing.JTextField();
		jLabel2 = new javax.swing.JLabel();
		txtPrevEndDate = new javax.swing.JTextField();
		jLabel3 = new javax.swing.JLabel();
		txtRealEndDate = new javax.swing.JTextField();
		jLabel15 = new javax.swing.JLabel();
		txtPrevDuration = new javax.swing.JTextField();
		jLabel14 = new javax.swing.JLabel();
		txtRealDuration = new javax.swing.JTextField();
		offsetsPanel = new javax.swing.JPanel();
		startOffsetPanel = new javax.swing.JPanel();
		jLabel5 = new javax.swing.JLabel();
		jPanel2 = new javax.swing.JPanel();
		txtStartOffset = new javax.swing.JTextField();
		jLabel6 = new javax.swing.JLabel();
		jPanel7 = new javax.swing.JPanel();
		txtStartOffset2 = new javax.swing.JTextField();
		jLabel7 = new javax.swing.JLabel();
		startOffsetPanel1 = new javax.swing.JPanel();
		jLabel8 = new javax.swing.JLabel();
		jPanel8 = new javax.swing.JPanel();
		txtDurationOffset = new javax.swing.JTextField();
		jLabel9 = new javax.swing.JLabel();
		jPanel9 = new javax.swing.JPanel();
		txtDurationOffset2 = new javax.swing.JTextField();
		jLabel10 = new javax.swing.JLabel();
		startOffsetPanel2 = new javax.swing.JPanel();
		jLabel11 = new javax.swing.JLabel();
		jPanel10 = new javax.swing.JPanel();
		txtGlobalOffset = new javax.swing.JTextField();
		jLabel12 = new javax.swing.JLabel();
		jPanel11 = new javax.swing.JPanel();
		txtGlobalOffset2 = new javax.swing.JTextField();
		jLabel13 = new javax.swing.JLabel();
		updateChart();
		buttonsPanel = new javax.swing.JPanel();
		bResUsg = new javax.swing.JButton();

		jPanel1.setLayout(new java.awt.BorderLayout(2, 5));

		titlePanel.setBorder(new javax.swing.border.SoftBevelBorder(
				javax.swing.border.BevelBorder.RAISED));
		titlePanel.add(txtTitle);

		jPanel1.add(titlePanel, java.awt.BorderLayout.NORTH);

		contentPanel.setLayout(new java.awt.BorderLayout(2, 2));

		textsPanel.setLayout(new java.awt.BorderLayout(2, 2));

		datesPanel.setLayout(new java.awt.GridLayout(3, 4, 2, 2));

		jLabel1.setText("Previsionnal start date");
		datesPanel.add(jLabel1);

		txtPrevStartDate.setPreferredSize(new java.awt.Dimension(100, 20));
		datesPanel.add(txtPrevStartDate);

		jLabel4.setText("Real start date");
		datesPanel.add(jLabel4);

		txtRealStartDate.setPreferredSize(new java.awt.Dimension(100, 20));

		datesPanel.add(txtRealStartDate);

		jLabel2.setText("Previsionnal end date");
		datesPanel.add(jLabel2);

		txtPrevEndDate.setPreferredSize(new java.awt.Dimension(100, 20));

		datesPanel.add(txtPrevEndDate);

		jLabel3.setText("Real end date");
		datesPanel.add(jLabel3);

		txtRealEndDate.setPreferredSize(new java.awt.Dimension(100, 20));
		datesPanel.add(txtRealEndDate);

		jLabel15.setText("Previsionnal duration");
		datesPanel.add(jLabel15);

		txtPrevDuration.setPreferredSize(new java.awt.Dimension(100, 20));
		datesPanel.add(txtPrevDuration);

		jLabel14.setText("Real duration");
		datesPanel.add(jLabel14);

		txtRealDuration.setPreferredSize(new java.awt.Dimension(100, 20));
		datesPanel.add(txtRealDuration);

		textsPanel.add(datesPanel, java.awt.BorderLayout.NORTH);

		offsetsPanel.setLayout(new java.awt.GridLayout(3, 1, 2, 2));

		startOffsetPanel.setLayout(new java.awt.GridLayout(1, 3));

		jLabel5.setText("Start offset");
		startOffsetPanel.add(jLabel5);

		jPanel2.setLayout(new java.awt.GridLayout(1, 2, 2, 2));

		txtStartOffset.setPreferredSize(new java.awt.Dimension(100, 20));
		jPanel2.add(txtStartOffset);

		jLabel6.setText("days");
		jPanel2.add(jLabel6);

		startOffsetPanel.add(jPanel2);

		jPanel7.setLayout(new java.awt.GridLayout(1, 2, 2, 2));

		txtStartOffset2.setPreferredSize(new java.awt.Dimension(100, 20));
		jPanel7.add(txtStartOffset2);

		jLabel7.setText("%");
		jPanel7.add(jLabel7);

		startOffsetPanel.add(jPanel7);

		offsetsPanel.add(startOffsetPanel);

		startOffsetPanel1.setLayout(new java.awt.GridLayout(1, 3));

		jLabel8.setText("Duration offset");
		startOffsetPanel1.add(jLabel8);

		jPanel8.setLayout(new java.awt.GridLayout(1, 2, 2, 2));

		txtDurationOffset.setPreferredSize(new java.awt.Dimension(100, 20));
		jPanel8.add(txtDurationOffset);

		jLabel9.setText("days");
		jPanel8.add(jLabel9);

		startOffsetPanel1.add(jPanel8);

		jPanel9.setLayout(new java.awt.GridLayout(1, 2, 2, 2));

		txtDurationOffset2.setPreferredSize(new java.awt.Dimension(100, 20));
		jPanel9.add(txtDurationOffset2);

		jLabel10.setText("%");
		jPanel9.add(jLabel10);

		startOffsetPanel1.add(jPanel9);

		offsetsPanel.add(startOffsetPanel1);

		startOffsetPanel2.setLayout(new java.awt.GridLayout(1, 3));

		jLabel11.setText("Global offset");
		startOffsetPanel2.add(jLabel11);

		jPanel10.setLayout(new java.awt.GridLayout(1, 2, 2, 2));

		txtGlobalOffset.setPreferredSize(new java.awt.Dimension(100, 20));
		jPanel10.add(txtGlobalOffset);

		jLabel12.setText("days");
		jPanel10.add(jLabel12);

		startOffsetPanel2.add(jPanel10);

		jPanel11.setLayout(new java.awt.GridLayout(1, 2, 2, 2));

		txtGlobalOffset2.setPreferredSize(new java.awt.Dimension(100, 20));
		jPanel11.add(txtGlobalOffset2);

		jLabel13.setText("%");
		jPanel11.add(jLabel13);

		startOffsetPanel2.add(jPanel11);

		offsetsPanel.add(startOffsetPanel2);

		textsPanel.add(offsetsPanel, java.awt.BorderLayout.SOUTH);

		contentPanel.add(textsPanel, java.awt.BorderLayout.NORTH);

		contentPanel.add(chartPanel, java.awt.BorderLayout.CENTER);

		bResUsg.setText("Resource usage...");
		bResUsg.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				bResUsgMouseClicked(evt);
			}
		});

		buttonsPanel.add(bResUsg);

		contentPanel.add(buttonsPanel, java.awt.BorderLayout.SOUTH);

		jPanel1.add(contentPanel, java.awt.BorderLayout.CENTER);

		
		txtPrevStartDate.setEditable(false);
		txtPrevEndDate.setEditable(false);
		txtRealStartDate.setEditable(false);
		txtRealEndDate.setEditable(false);
		txtPrevDuration.setEditable(false);
		txtRealDuration.setEditable(false);

		txtStartOffset.setEditable(false);
		txtDurationOffset.setEditable(false);
		txtGlobalOffset.setEditable(false);

		txtStartOffset2.setEditable(false);
		txtDurationOffset2.setEditable(false);
		txtGlobalOffset2.setEditable(false);

		this.setLayout(new java.awt.BorderLayout(2, 2));
		this.add(jPanel1, java.awt.BorderLayout.CENTER);

	}

	private void bResUsgMouseClicked(java.awt.event.MouseEvent evt) {
		// TODO add your handling code here:
	}

	private void updateTextFields() 
	{
		if(plannableC.getName() != null)
		{
			txtTitle.setText(plannableC.getName());
		}
		else
		{			
			txtTitle.setText("n/a");
		}
		
		if(plannableC.getPrevStartDate() != null)
		{
			txtPrevStartDate.setText(Utils.dateToString(plannableC.getPrevStartDate()));
		}
		else
		{			
			txtPrevStartDate.setText("n/a");
		}
		
		if(plannableC.getPrevEndDate() != null)
		{
			txtPrevEndDate.setText(Utils.dateToString(plannableC.getPrevEndDate()));
		}
		else
		{			
			txtPrevEndDate.setText("n/a");
		}
		
		if(plannableC.getRealStartDate() != null)
		{
			txtRealStartDate.setText(Utils.dateToString(plannableC.getRealStartDate()));
		}
		else
		{			
			txtRealStartDate.setText("n/a");
		}
		
		if(plannableC.getRealEndDate() != null)
		{
			txtRealEndDate.setText(Utils.dateToString(plannableC.getRealEndDate()));
		}
		else
		{			
			txtRealEndDate.setText("n/a");
		}
		
		if(plannableC.getPrevDuration() != null)
		{
			txtPrevDuration.setText(plannableC.getPrevDuration().toString());
		}
		else
		{			
			txtPrevDuration.setText("n/a");
		}
		
		if(plannableC.getRealDuration() != null)
		{
			txtRealDuration.setText(plannableC.getRealDuration().toString());		
		}
		else
		{			
			txtRealDuration.setText("n/a");
		}
		
		if(plannableC.getStartOffset() != null)
		{
			txtStartOffset.setText(plannableC.getStartOffset().toString());
		}
		else
		{			
			txtStartOffset.setText("n/a");
		}
		
		if(plannableC.getDurationOffset() != null)
		{
			txtDurationOffset.setText(plannableC.getDurationOffset().toString());
		}
		else
		{			
			txtDurationOffset.setText("n/a");
		}
		
		if(plannableC.getGlobalOffset() != null)
		{
			txtGlobalOffset.setText(plannableC.getGlobalOffset().toString());		
		}
		else
		{			
			txtGlobalOffset.setText("n/a");
		}
		
		if(plannableC.getStartOffsetPrct() != null)
		{
			txtStartOffset2.setText(Utils.doubleToString(plannableC.getStartOffsetPrct()));
		}
		else
		{			
			txtStartOffset2.setText("n/a");
		}		
		
		if(plannableC.getDurationOffsetPrct() != null)
		{
			txtDurationOffset2.setText(Utils.doubleToString(plannableC.getDurationOffsetPrct()));
		}
		else
		{			
			txtDurationOffset2.setText("n/a");
		}
		
		if(plannableC.getGlobalOffsetPrct() != null)
		{
			txtGlobalOffset2.setText(Utils.doubleToString(plannableC.getGlobalOffsetPrct()));
		}
		else
		{			
			txtGlobalOffset2.setText("n/a");
		}
	}	
	
	
		
		
		
	private void updateChart() 
	{
		TaskSeriesCollection dataset = new TaskSeriesCollection();
		TaskSeries tsR = new TaskSeries("Realization");
		TaskSeries tsP = new TaskSeries("Prevision");
		try {
			tsP.add(new Task("", new SimpleTimePeriod(plannableC
					.getPrevStartDate(), plannableC.getPrevEndDate())));
			tsR.add(new Task("", new SimpleTimePeriod(plannableC
					.getRealStartDate(), plannableC.getRealEndDate())));

		} catch (Exception e) {
			assert true;
		}
		dataset.add(tsP);
		dataset.add(tsR);
		JFreeChart chart = ChartFactory.createGanttChart("", "", "Dates",
				dataset, true, false, false);
		chartPanel = new ChartPanel(chart);

	}

	/**
	 * @param args
	 *            the command line arguments
	 */
	public static void main(String args[]) {
		JFrame f = new JFrame();
		WorkBreakDownElement wbe1 = null;
		try {
			wbe1 = new WorkBreakDownElement("wbe1",
					"Mettre en place le projet", Utils
							.stringToDate("01-09-2005"), Utils
							.stringToDate("20-09-2005"), new Double(15), Utils
							.stringToDate("05-09-2005"), Utils
							.stringToDate("15-09-2005"), new Double(16));
		} catch (Exception e) {
			System.out.println(e.getMessage());
		}

		f.getContentPane().add(new PlannableView(new ControlPlannable(wbe1)));
		f.setVisible(true);
	}

}
